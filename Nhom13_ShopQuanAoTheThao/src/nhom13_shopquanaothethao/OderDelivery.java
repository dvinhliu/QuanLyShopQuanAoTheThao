/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nhom13_shopquanaothethao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author ACER
 */
public class OderDelivery extends javax.swing.JFrame {

    /**
     * Creates new form OderDelivery
     */
    Connection con;
    BanHangForm BHF;
    public OderDelivery(BanHangForm bf) {
        initComponents();
        this.BHF = bf;
    }
    private boolean CheckError()
    {
        if (txt_DiaChi.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập Địa Chỉ", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_Exit = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_Save = new javax.swing.JButton();
        btn_Huy = new javax.swing.JButton();
        txt_SDT = new javax.swing.JTextField();
        txt_TenKH = new javax.swing.JTextField();
        txt_DiaChi = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(3, 172, 220));

        lbl_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cancel.png"))); // NOI18N
        lbl_Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_ExitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbl_Exit))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_Exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(3, 172, 220));
        jLabel2.setText("Thêm thông tin giao hàng");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Tên khách hàng:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Địa chỉ:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("SĐT:");

        btn_Save.setBackground(new java.awt.Color(255, 132, 44));
        btn_Save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Save.setForeground(new java.awt.Color(255, 255, 255));
        btn_Save.setText("Lưu");
        btn_Save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });

        btn_Huy.setBackground(new java.awt.Color(153, 153, 153));
        btn_Huy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Huy.setForeground(new java.awt.Color(255, 255, 255));
        btn_Huy.setText("Hủy");
        btn_Huy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HuyActionPerformed(evt);
            }
        });

        txt_SDT.setEditable(false);
        txt_SDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_SDT.setEnabled(false);
        txt_SDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_SDTKeyTyped(evt);
            }
        });

        txt_TenKH.setEditable(false);
        txt_TenKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_TenKH.setEnabled(false);
        txt_TenKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TenKHKeyTyped(evt);
            }
        });

        txt_DiaChi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_DiaChi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_DiaChiKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                        .addComponent(btn_Save)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Huy))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_SDT, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_TenKH)
                            .addComponent(txt_DiaChi))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_TenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Huy, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_ExitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_lbl_ExitMouseClicked

    private void txt_TenKHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TenKHKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetter(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_TenKHKeyTyped

    private void txt_DiaChiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_DiaChiKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetter(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()) && evt.getKeyChar() != '.' && evt.getKeyChar() != ',')
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_DiaChiKeyTyped

    private void txt_SDTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SDTKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_SDTKeyTyped

    private void btn_HuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HuyActionPerformed
        // TODO add your handling code here:
        txt_DiaChi.setText("");
    }//GEN-LAST:event_btn_HuyActionPerformed

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        // TODO add your handling code here:
        if (CheckError())
        {
            String id;
            id = BHF.loadMaHD();
            if (BHF.chk_discount.isSelected())
            {
                if (!BHF.txt_Discount.getText().isEmpty() && Integer.parseInt(BHF.txt_Discount.getText()) < 101)
                {
                    int tong = Integer.parseInt(BHF.lbl_Total.getText().replace(".", ""));
                    double discount = (double)tong - ((double)tong * (Double.parseDouble(BHF.txt_Discount.getText()) / 100));
                    try
                    {
                        con = nhom13_shopquanaothethao.Connection.GetConnection();
                        String sql = "INSERT INTO HOADON (IDHOADON, NGAYLAPHD, IDNHANVIEN, IDKH, DIACHI, HINHTHUC, GIAMGIA, THANHTIEN) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                        PreparedStatement ps = con.prepareStatement(sql);
                        ps.setString(1, id);

                        Date date = new Date();
                        Timestamp timestamp = new Timestamp(date.getTime());
                        ps.setTimestamp(2, timestamp);

                        ps.setString(3, BHF.lbl_IDNV.getText());
                        ps.setString(4, BHF.getIDKH());
                        ps.setString(5, txt_DiaChi.getText().trim());
                        ps.setString(6, BHF.OderType);
                        ps.setInt(7, Integer.parseInt(BHF.txt_Discount.getText()));
                        ps.setInt(8, (int) discount + 100000);

                        ps.executeUpdate();
                        ps.close();
                        JOptionPane.showMessageDialog(rootPane, "Thêm thành công hóa đơn", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
                        for (int i = 0; i < BHF.tblmodel.getRowCount(); i++)
                        {
                            String idsp = "";
                            String check = "SELECT IDSanPham FROM SANPHAM WHERE TENSANPHAM = N'" + BHF.tblmodel.getValueAt(i, 1) + "' AND SIZE = '" + BHF.tblmodel.getValueAt(i, 3) + "'";
                            Statement st = con.createStatement();
                            ResultSet rs = st.executeQuery(check);
                            if (rs.next())
                            {
                                idsp = rs.getString("IDSANPHAM");
                            }
                            rs.close();
                            st.close();

                            String sql2 = "INSERT INTO CHITIETHOADON VALUES (?, ?, ?, ?)";
                            PreparedStatement ps2 = con.prepareStatement(sql2);
                            ps2.setString(1, id);
                            ps2.setString(2, idsp);
                            ps2.setInt(3, Integer.parseInt(BHF.tblmodel.getValueAt(i, 2).toString()));
                            ps2.setInt(4, Integer.parseInt(BHF.tblmodel.getValueAt(i, 5).toString()));

                            ps2.executeUpdate();
                            ps2.close();

                            String sql3 = "SELECT SOLUONGTON FROM SANPHAM WHERE IDSANPHAM = '" + idsp + "'";
                            Statement st1 = con.createStatement();
                            ResultSet rs1 = st1.executeQuery(sql3);
                            int slton = 0;
                            if (rs1.next())
                            {
                                slton = rs1.getInt("SOLUONGTON");
                            }
                            st1.close();
                            rs1.close();

                            String sql4;
                            int sl = slton - Integer.parseInt(BHF.tblmodel.getValueAt(i, 2).toString());
                            if (sl != 0)
                            {
                                sql4 = "UPDATE SANPHAM SET SoLuongTon = " + sl + " , TinhTrang = N'Còn Hàng'" +  " WHERE IDSANPHAM = '" + idsp + "'";
                            }
                            else
                            {
                                sql4 = "UPDATE SANPHAM SET SoLuongTon = " + sl + " , TinhTrang = N'Hết Hàng'" +  " WHERE IDSANPHAM = '" + idsp + "'";
                            }

                            Statement st2 = con.createStatement();
                            st2.executeUpdate(sql4);

                            st2.close();
                        }
                        con.close();
                        BHF.CallBtnNew();
                    }
                    catch (SQLException e)
                    {
                        e.printStackTrace();
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập giảm giá và trong khoảng (1-100)", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
            else
            {
                int tong = Integer.parseInt(BHF.lbl_Total.getText().replace(".", ""));
                try
                {
                    con = nhom13_shopquanaothethao.Connection.GetConnection();
                    String sql = "INSERT INTO HOADON (IDHOADON, NGAYLAPHD, IDNHANVIEN, IDKH, DIACHI, HINHTHUC, GIAMGIA, THANHTIEN) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.setString(1, id);

                    Date date = new Date();
                    Timestamp timestamp = new Timestamp(date.getTime());
                    ps.setTimestamp(2, timestamp);

                    ps.setString(3, BHF.lbl_IDNV.getText());
                    ps.setString(4, BHF.getIDKH());
                    ps.setString(5, txt_DiaChi.getText().trim());
                    ps.setString(6, BHF.OderType);
                    ps.setInt(7, 0);
                    ps.setInt(8, tong + 100000);

                    ps.executeUpdate();
                    ps.close();
                    JOptionPane.showMessageDialog(rootPane, "Thêm thành công hóa đơn", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
                    for (int i = 0; i < BHF.tblmodel.getRowCount(); i++)
                    {
                        String idsp = "";
                        String check = "SELECT IDSanPham FROM SANPHAM WHERE TENSANPHAM = N'" + BHF.tblmodel.getValueAt(i, 1) + "' AND SIZE = '" + BHF.tblmodel.getValueAt(i, 3) + "'";
                        Statement st = con.createStatement();
                        ResultSet rs = st.executeQuery(check);
                        if (rs.next())
                        {
                            idsp = rs.getString("IDSANPHAM");
                        }
                        rs.close();
                        st.close();

                        String sql2 = "INSERT INTO CHITIETHOADON VALUES (?, ?, ?, ?)";
                        PreparedStatement ps2 = con.prepareStatement(sql2);
                        ps2.setString(1, id);
                        ps2.setString(2, idsp);
                        ps2.setInt(3, Integer.parseInt(BHF.tblmodel.getValueAt(i, 2).toString()));
                        ps2.setInt(4, Integer.parseInt(BHF.tblmodel.getValueAt(i, 5).toString()));

                        ps2.executeUpdate();
                        ps2.close();

                        String sql3 = "SELECT SOLUONGTON FROM SANPHAM WHERE IDSANPHAM = '" + idsp + "'";
                        Statement st1 = con.createStatement();
                        ResultSet rs1 = st1.executeQuery(sql3);
                        int slton = 0;
                        if (rs1.next())
                        {
                            slton = rs1.getInt("SOLUONGTON");
                        }
                        st1.close();
                        rs1.close();

                        String sql4;
                        int sl = slton - Integer.parseInt(BHF.tblmodel.getValueAt(i, 2).toString());
                        if (sl != 0)
                        {
                            sql4 = "UPDATE SANPHAM SET SoLuongTon = " + sl + " , TinhTrang = N'Còn Hàng'" +  " WHERE IDSANPHAM = '" + idsp + "'";
                        }
                        else
                        {
                            sql4 = "UPDATE SANPHAM SET SoLuongTon = " + sl + " , TinhTrang = N'Hết Hàng'" +  " WHERE IDSANPHAM = '" + idsp + "'";
                        }

                        Statement st2 = con.createStatement();
                        st2.executeUpdate(sql4);

                        st2.close();
                    }
                    con.close();
                    BHF.CallBtnNew();
                }
                catch (SQLException e)
                {
                    e.printStackTrace();
                }
            }
            this.dispose();
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BanHangForm bf = new BanHangForm();
                new OderDelivery(bf).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_Huy;
    public javax.swing.JButton btn_Save;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JLabel lbl_Exit;
    public javax.swing.JTextField txt_DiaChi;
    public javax.swing.JTextField txt_SDT;
    public javax.swing.JTextField txt_TenKH;
    // End of variables declaration//GEN-END:variables
}
